{"version":3,"sources":["components/Header.jsx","hooks/useVzlaData.js","components/Card.jsx","components/ListVzla.jsx","components/CaseByAge.jsx","components/ListGlobalCase.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","className","href","rel","target","src","alt","useVzlaData","url","useState","data","setData","useEffect","fetch","then","response","json","catch","err","console","error","formatNumber","number","Intl","NumberFormat","format","Card","length","Confirmed","Count","Active","Recovered","Deaths","ListVzla","states","ByState","Object","entries","map","item","CaseByAge","age","ByAgeRange","ListGlobalCase","search","setSearch","searchInput","useRef","handleSearch","useCallback","current","value","filterUser","useMemo","filter","countrie","country","toLowerCase","includes","type","ref","onChange","placeholder","cases","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc74e084.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./styles/Header.css\";\n\nconst Header = () => {\n    return(\n        <header className=\"header\">\n            <a href='https://ko-fi.com/Y8Y41PMQ4' rel=\"noreferrer\" target='_blank'>\n                <img src='https://cdn.ko-fi.com/cdn/kofi1.png?v=2' alt='Buy Me a Coffee at ko-fi.com' />\n            </a>\n\n            <div className='header--title'>\n                <h1>COVID-19</h1>\n                <p>SEGUIDOR DE CASOS DE VENEZUELA</p>\n            </div>\n\n        </header>\n    );\n};\n\nexport default Header;","import {useState, useEffect} from 'react';\n\nconst useVzlaData = (url) => {\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        fetch(url)\n        .then(response => response.json())\n        .then(data => setData(data))\n        .catch(err => console.error(err));\n    }, [url])\n\n    return data;\n}\n\nexport default useVzlaData;","import React from \"react\";\nimport Skeleton from \"react-loading-skeleton\";\nimport useVzlaData from \"../hooks/useVzlaData\";\n\nimport \"./styles/Card.css\";\n\nconst API = \"https://covid19.patria.org.ve/api/v1/summary\";\nconst formatNumber = (number) => new Intl.NumberFormat(\"de-DE\").format(number);\n\nconst Card =  () => {\n\n    const data = useVzlaData(API);\n\n    return (\n        <div className=\"card--container\">\n            <div className=\"card--item\">\n                <h2>Confirmados</h2>\n                <p>{(data.length === 0) ? <Skeleton/> : formatNumber(data.Confirmed.Count)}</p>\n            </div>\n            <div className=\"card--item\">\n                <h2>Activos</h2>\n                <p>{(data.length === 0) ? <Skeleton/> : formatNumber(data.Active.Count)}</p>\n            </div>\n            <div className=\"card--item\">\n                <h2>Recuperados</h2>\n                <p>{(data.length === 0) ? <Skeleton/> : formatNumber(data.Recovered.Count)}</p>\n            </div>\n            <div className=\"card--item\">\n                <h2>Fallecidos</h2>\n                <p>{(data.length === 0) ? <Skeleton/> : formatNumber(data.Deaths.Count)}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Card;","import React from \"react\";\nimport Skeleton from \"react-loading-skeleton\";\nimport useVzlaData from \"../hooks/useVzlaData\";\nimport \"./styles/ListVzla.css\";\n\nconst API = \"https://covid19.patria.org.ve/api/v1/summary\";\nconst formatNumber = (number) => new Intl.NumberFormat(\"de-DE\").format(number);\n\nconst ListVzla = () => {\n\n    const data = useVzlaData(API);//Hook que me trae la data\n\n    let states;\n\n    if(data.Confirmed){\n        states = data.Confirmed.ByState;\n    }\n    \n    return(\n        <div className=\"list--container\">\n            <h3>Casos por estados</h3>\n            <ul>\n                {(data.Confirmed) ? data.Confirmed && Object.entries(states).map(item => (\n                <div key={item[0]}>\n                    <h4>\n                        <span>{item[0]}</span>\n                        <span>{formatNumber(item[1])}</span>\n                    </h4>\n                </div>\n            )) : <Skeleton/>}\n            </ul>\n        </div>\n    )\n}\n\nexport default ListVzla;","import React from \"react\";\nimport Skeleton from \"react-loading-skeleton\";\nimport useVzlaData from \"../hooks/useVzlaData\";\nimport \"./styles/ListVzla.css\";\n\nconst API = \"https://covid19.patria.org.ve/api/v1/summary\";\nconst formatNumber = (number) => new Intl.NumberFormat(\"de-DE\").format(number);\n\nconst CaseByAge = () => {\n\n    const data = useVzlaData(API);//Hook que me trae la data\n\n    let age;\n\n    if(data.Confirmed){\n        age = data.Confirmed.ByAgeRange;\n    }\n    \n    return(\n        <div className=\"list--container\">\n            <h3>Casos por edad</h3>\n            <ul>\n                {(data.Confirmed) ? data.Confirmed && Object.entries(age).map(item => (\n                <div key={item[0]}>\n                    <h4>\n                        <span>{item[0]} años</span>\n                        <span>{formatNumber(item[1])}</span>\n                    </h4>\n                </div>\n            )) : <Skeleton/>}\n            </ul>\n        </div>\n    )\n}\n\nexport default CaseByAge;","import React, {useState, useEffect, useMemo, useRef, useCallback} from \"react\";\nimport Skeleton from \"react-loading-skeleton\";\nimport \"./styles/ListVzla.css\";\nimport \"./styles/ListGlobalCase.css\";\n\nconst API = \"https://coronavirus-19-api.herokuapp.com/countries\";\nconst formatNumber = (number) => new Intl.NumberFormat(\"de-DE\").format(number);\n\nconst ListGlobalCase = () => {\n\n    const [search, setSearch] = useState(\"\");\n    const searchInput = useRef(null);\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        fetch(API)\n        .then(response => response.json())\n        .then(data => setData(data))\n        .catch(error => console.error(error));\n    }, [])\n\n    const handleSearch = useCallback(() => {\n        setSearch(searchInput.current.value);\n    }, [])\n\n    const filterUser = useMemo(() => \n        data.filter((countrie) => {\n            return countrie.country.toLowerCase().includes(search.toLowerCase());\n        }),\n         [data, search]\n    )\n\n    return(\n        <div className=\"list--container global-container\">\n            <h3>Casos por países</h3>\n            <input type=\"text\" value={search} ref={searchInput} onChange={handleSearch} placeholder=\"Buscar por pais\"/>\n            <ul>\n                {(data.length === 0) ? <Skeleton/> : filterUser.map(countrie => {\n                    return(\n                    <div key={countrie.country}>\n                        <h4>\n                            <span>{countrie.country}</span>\n                            <span>{formatNumber(countrie.cases)}</span>\n                        </h4>\n                    </div>\n                    )\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default ListGlobalCase;","import Header from \"./components/Header\";\nimport Card from \"./components/Card\";\nimport ListVzla from \"./components/ListVzla\";\nimport CaseByAge from \"./components/CaseByAge\";\nimport ListGlobalCase from \"./components/ListGlobalCase\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <main className=\"main\">\n        <div className=\"container-list\">\n          <Card />\n          <div className=\"container-info\">\n            <ListVzla />\n            <CaseByAge/>\n          </div>\n        </div>\n        <ListGlobalCase/>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}